import requests, json
from itertools import product, chain

URL = "http://aes.cryptohack.org/triple_des/"

# Triple DES keys can be weak (i.e. encryption function is the same as decryption)

def try_key(key_hex):
    response = requests.get(f"{URL}/encrypt_flag/{key_hex}").text
    try: 
        ct = json.loads(response)["ciphertext"]
        new_response = requests.get(f"{URL}/encrypt/{key_hex}/{ct}").text
        pt = json.loads(new_response)["ciphertext"]
        return bytes.fromhex(pt)
    except Exception as e:
        return response, e

# See https://en.wikipedia.org/wiki/Weak_key#Weak_keys_in_DES for a list of weak keys
indiv_weak_keys = ["0101010101010101", 
                   "FEFEFEFEFEFEFEFE", 
                   "E0E0E0E0F1F1F1F1", 
                   "1F1F1F1F0E0E0E0E", 
                   "0000000000000000", 
                   "FFFFFFFFFFFFFFFF",
                   "E1E1E1E1F0F0F0F0",
                   "1E1E1E1E0F0F0F0F"
                  ]

# Note most of these keys work and don't throw errors, some of them decrypt to garbage - not sure why this is
for i in chain(product(indiv_weak_keys, repeat=2), product(indiv_weak_keys, repeat=3)):
    key = "".join(i)
    print(key, try_key(key))